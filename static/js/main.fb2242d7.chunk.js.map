{"version":3,"sources":["components/Button.jsx","components/Display.jsx","main/Calculator.jsx","serviceWorker.js","index.js"],"names":["props","classes","operation","double","triple","onClick","e","click","label","className","value","initialState","displayValue","clearDisplay","values","current","Calculator","state","this","setState","console","log","n","includes","addDigit","setOperation","op","clearMemory","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fb2242d7.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Button.css'\r\n\r\nexport default props => {\r\n    let classes = 'button '\r\n    classes += props.operation ? 'operation' : ''\r\n    classes += props.double ? 'double' : ''\r\n    classes += props.triple ? 'triple' : ''\r\n\r\n    return (\r\n        <button \r\n        onClick={e => props.click && props.click(props.label)}\r\n        className={classes}>\r\n            {props.label}\r\n        </button>\r\n    )\r\n}","import React from 'react'\r\nimport './Display.css'\r\n\r\nexport default props =>\r\n    <div className=\"display\" >{props.value}</div>","import React,{Component} from 'react'\r\nimport './Calculator.css'\r\n\r\nimport Button from '../components/Button'\r\nimport Display from '../components/Display'\r\n\r\nconst initialState = {\r\n    displayValue:'0',\r\n    clearDisplay: false,\r\n    operation: null,\r\n    values: [0,0],\r\n    current: 0\r\n}\r\n\r\nexport default class Calculator extends Component {\r\n\r\n\r\n    state = {...initialState}\r\n\r\n    clearMemory() {\r\n        this.setState({...initialState})\r\n    }\r\n\r\n    setOperation(operation) {\r\n        console.log(operation)\r\n    }\r\n\r\n    addDigit(n) {\r\n        if (n === '.' && this.state.displayValue.includes('.')) {\r\n            return \r\n        }\r\n\r\n        const clearDisplay = this.state.displayValue === '0'\r\n           || this.state.clearDisplay\r\n        const currentValue = clearDisplay ? '' : this.state.displayValue\r\n        const displayValue = currentValue + n\r\n        this.setState ({displayValue, clearDisplay: false})\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const addDigit = n => this.addDigit(n)\r\n        const setOperation = op => this.setOperation(op)\r\n\r\n\r\n        return (\r\n            <div className=\"calculator\">\r\n                < Display value={this.state.displayValue} />\r\n                < Button label=\"AC\" click={() => this.clearMemory()} triple/>\r\n                < Button label=\"/\" click={setOperation} operation />\r\n                < Button label=\"7\" click={addDigit}/>\r\n                < Button label=\"8\" click={addDigit} />\r\n                < Button label=\"9\" click={addDigit} />\r\n                < Button label=\"*\" click={setOperation} operation />\r\n                < Button label=\"4\" click={addDigit} />\r\n                < Button label=\"5\" click={addDigit} />\r\n                < Button label=\"6\" click={addDigit} />\r\n                < Button label=\"-\" click={setOperation} operation />\r\n                < Button label=\"1\" click={addDigit} />\r\n                < Button label=\"2\" click={addDigit} />\r\n                < Button label=\"3\" click={addDigit} />\r\n                < Button label=\"+\" click={setOperation} operation />\r\n                < Button label=\"0\" click={addDigit} double />\r\n                < Button label=\".\" click={addDigit} />\r\n                < Button label=\"=\" click={setOperation} />\r\n                \r\n     \r\n     \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './main/Calculator';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n\n    <>\n        <h1>Calculadora</h1>\n        <Calculator />\n    </>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}